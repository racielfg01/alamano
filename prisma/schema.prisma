// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favoriteIds String[] @db.ObjectId

  accounts Account[]
  products Product[]
  reservations Reservation[]

}

model Account {
id String @id @default(auto()) @map("_id") @db.ObjectId
userId String @db.ObjectId
type String
provider String
providerAccountId String
refresh_token String? @db.String
access_token String? @db.String
expires_at Int?
token_type String?
scope String?
id_token String? @db.String
session_state String?

user User @relation( fields:[userId], references:[id], onDelete: Cascade)

@@unique([provider,providerAccountId])
}

model Product {
id String @id @default(auto()) @map("_id") @db.ObjectId
title String
description String
imageSrc String
createAt DateTime @default(now())
category String
quantity Int
userId String @db.ObjectId
price Int
isService Boolean
user User @relation(fields:[userId],references:[id],onDelete:Cascade)
order Order[]
}

model Reservation {
id String @id @default(auto()) @map("_id") @db.ObjectId
userId  String @db.ObjectId
productId String @db.ObjectId
startDate DateTime
endDate DateTime
totalPrice Int
createAt DateTime @default(now())

user User @relation(fields:[userId],references:[id],onDelete:Cascade)
product Product @relation(fields: [productId],references: [id],onDelete:Cascade)

}

model Order {
id String @id @default(auto()) @map("_id") @db.ObjectId
userId  String @db.ObjectId
productId String @db.ObjectId
state String
totalPrice Int
createAt DateTime @default(now())

user User @relation(fields:[userId],references:[id],onDelete:Cascade)
product Product @relation(fields: [productId],references: [id],onDelete:Cascade)

}